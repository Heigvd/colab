name: CI

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: colab_test
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: colab_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      mailhog:
        image: mailhog/mailhog
        ports:
          - 1025:1025
          - 8025:8025

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # actions/setup-java should work with cache: 'maven'
      # but it does not
      # so we use manual cache
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.18.1
          cache: yarn
          cache-dependency-path: |
            colab-webapp/yarn.lock
            colab-tests/src/test/node/yarn.lock

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          cache: 'maven'

      - name: Maven Install
        run: mvn -Dpmd.failurePriority=5 -B clean install

      - name: Check with Maven Site
        # build site but do not upload it
        # rebuild all packages with reporting profile
        run: |
          mvn -Dreporting -DskipTests -B clean package
          mvn -Dreporting -B site site:stage

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: colab-webapp/src/main/docker/colab
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          build-args: |
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            DOCKER_IMAGE_TAGS=${{ steps.docker-meta.outputs.tags }}

  update-dev-fleet:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Update VERSION.md in colab-dev-fleet
        shell: bash
        run: |
          git clone --single-branch --branch main "https://${{ secrets.ALBASIM_CI_REPO_PAT }}@github.com/Heigvd/colab-dev-fleet.git" colab-dev-fleet
          cd colab-dev-fleet
          echo "GitHub Build #${GITHUB_RUN_NUMBER}, based on ${GITHUB_REF} @ ${GITHUB_SHA}" > VERSION.md
          perl -pi -e "s/(colab\.fleet\.number)=.*$/\1=${GITHUB_RUN_NUMBER}/" fleet.yaml
          git config user.email "albasim@heig-vd.ch"
          git config user.name "albasim-ci"
          git add VERSION.md fleet.yaml
          git commit -m "Update version"
          git push
