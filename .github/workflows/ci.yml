name: CI

on:
  push:
    branches:
      - main
      - dev
    tags:
      - "v*"
  pull_request:
    branches:
      - main
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: colab_test
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: colab_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      mailhog:
        image: mailhog/mailhog
        ports:
          - 1025:1025
          - 8025:8025

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.20.2
          cache: yarn
          cache-dependency-path: |
            colab-webapp/yarn.lock
            colab-tests/src/test/node/yarn.lock
            colab-api/src/main/node/colab-yjs/yarn.lock

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          cache: "maven"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: docker-meta-yjs
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-yjs
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: YJS Yarn Install
        run: yarn --cwd colab-api/src/main/node/colab-yjs install

      - name: YJS Yarn Build
        run: yarn --cwd colab-api/src/main/node/colab-yjs build

      - name: Build YJS image
        uses: docker/build-push-action@v3
        with:
          context: colab-api/src/main/node/colab-yjs
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: true
          tags: ${{ steps.docker-meta-yjs.outputs.tags }}
          labels: ${{ steps.docker-meta-yjs.outputs.labels }}
          build-args: |
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            DOCKER_IMAGE_TAGS=${{ steps.docker-meta-yjs.outputs.tags }}

      - name: Maven Install
        run: mvn -Dpmd.failurePriority=5 -B clean install

      - name: Check with Maven Site
        # build site but do not upload it
        # rebuild all packages with reporting profile
        run: |
          mvn -Dreporting -DskipTests -B clean package
          mvn -Dreporting -B site site:stage

      - name: Extract Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: colab-webapp/src/main/docker/colab
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          build-args: |
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            DOCKER_IMAGE_TAGS=${{ steps.docker-meta.outputs.tags }}
