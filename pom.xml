<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ch.colab-project.colab</groupId>
    <artifactId>colab</artifactId>
    <version>0.1</version>
    <packaging>pom</packaging>

    <organization>
        <name>AlbaSim, MEI, HEIG-VD, HES-SO</name>
        <url>https://www.colab-project.ch</url>
    </organization>

    <developers>
        <developer>
            <name>Maxence Laurent</name>
            <email>maxence.laurent@gmail.com</email>
        </developer>
        <developer>
            <name>Sandra Monnier</name>
        </developer>
    </developers>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/Heigvd/colab/issues</url>
    </issueManagement>

    <ciManagement>
        <system>GitHub</system>
        <url>https://github.com/Heigvd/colab</url>
    </ciManagement>

    <distributionManagement>
        <site>
            <id>github</id>
            <url>scm:git:https://github.com/Heigvd/colab.git</url>
        </site>
    </distributionManagement>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <modules>
        <module>build-tools</module>
        <module>colab-api</module>
        <module>colab-client</module>
        <module>colab-tests</module>
        <module>colab-webapp</module>
        <module>client-generator-model</module>
        <module>client-generator-plugin</module>
    </modules>

    <properties>
        <project.years>2020-2021</project.years>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <pmd.failurePriority>2</pmd.failurePriority>

        <eclipselink.version>2.7.7</eclipselink.version>
        <payara.version>5.2021.1</payara.version>
        <arquillian.version>1.7.0.Alpha7</arquillian.version>

        <jacoco.surefireArgLine></jacoco.surefireArgLine>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--*****************************************************************-->
            <!-- PROVIDED DEPENDENCIES -->
            <dependency>
                <groupId>fish.payara.api</groupId>
                <artifactId>payara-bom</artifactId>
                <version>${payara.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--*****************************************************************-->
            <!-- DEPENDENCIES -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.9.11</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.30</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.2.3</version>
            </dependency>

            <!--
            Works well with a standard deployment but crashes during tests...
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-cdi</artifactId>
                <version>4.2.0</version>
            </dependency> -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>4.2.0</version>
            </dependency>

            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.2.18</version>
                <type>jar</type>
            </dependency>



            <!--*****************************************************************-->
            <!-- TEST DEPENDENCIES -->
            <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>payara-embedded-all</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>payara-micro</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- JUNIT 4
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.1</version>
                <scope>test</scope>
            </dependency>
            -->
            <!-- JUNIT 5 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>5.7.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>5.7.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>5.7.1</version>
                <scope>test</scope>
            </dependency>

            <!-- Arquilian Framework -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.junit5</groupId>
                <artifactId>arquillian-junit5-container</artifactId>
                <version>${arquillian.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- https://github.com/arquillian/arquillian-core/issues/137 -->
            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>arquillian-payara-server-embedded</artifactId>
                <version>2.3.1.1-arq-1.7.0.Alpha5</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-persistence-dbunit</artifactId>
                <version>1.0.0.Alpha7</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.eu.ingwar.tools</groupId>
                <artifactId>arquillian-suite-extension</artifactId>
                <version>1.2.2</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- one would not defined following dependencies here, but in dependencyManagemenet
         but, as they are improrted from payara-bom, it's the only way I've found to propagate
         version number to children...
         All deps here have scope=provided, so it's not going to be a real issue...
    -->
    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-web-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise.concurrent</groupId>
            <artifactId>jakarta.enterprise.concurrent-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.resource</groupId>
            <artifactId>jakarta.resource-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.batch</groupId>
            <artifactId>jakarta.batch-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <scope>provided</scope>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.core</artifactId>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Compilation -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <optimize>${build.optimize}</optimize>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                        <!--<compilerArgumentslive:.cid.f66c55a116cd64c2>
                            <endorseddirs>${endorsed.dir}</endorseddirs>
                        </compilerArguments>-->
                        <showDeprecation>true</showDeprecation>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>4.2.0</version>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Low</threshold>
                        <failOnError>true</failOnError>
                        <includeFilterFile>colab/spotbugs/security-include.xml</includeFilterFile>
                        <excludeFilterFile>colab/spotbugs/security-exclude.xml</excludeFilterFile>
                        <spotbugsXmlOutputFilename>spotbugsSecurityXml.xml</spotbugsXmlOutputFilename>
                        <plugins>
                            <plugin>
                                <groupId>com.h3xstream.findsecbugs</groupId>
                                <artifactId>findsecbugs-plugin</artifactId>
                                <version>1.9.0</version>
                            </plugin>
                        </plugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>ch.colab-project.colab</groupId>
                            <artifactId>build-tools</artifactId>
                            <version>1.0</version>
                        </dependency>
                    </dependencies>
                    <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                    <!--
                    <dependencies>
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>4.0.2</version>
                        </dependency>
                    </dependencies>
                    -->
                </plugin>
                <plugin>
                    <groupId>de.empulse.eclipselink</groupId>
                    <artifactId>staticweave-maven-plugin</artifactId>
                    <version>1.0.0</version>
                    <executions>
                        <execution>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>weave</goal>
                            </goals>
                            <configuration>
                                <persistenceXMLLocation>META-INF/persistence.xml</persistenceXMLLocation>
                                <logLevel>FINE</logLevel>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.eclipse.persistence</groupId>
                            <artifactId>org.eclipse.persistence.jpa</artifactId>
                            <version>${eclipselink.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- Jar creation -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix/>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!-- War creation -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.3</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <!-- Dependencies management -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <!-- Reource attachment -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <!-- Test -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <configuration>
                        <!-- Add options to start payara with java 11-->
                        <!--@{} syntax: see http://maven.apache.org/surefire/maven-surefire-plugin/faq.html#late-property-evaluation -->
                        <argLine>-Xms800m -Xmx800m @{jacoco.surefireArgLine} --add-modules java.se --add-opens=java.base/jdk.internal.loader=ALL-UNNAMED --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED --add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.net.www.protocol.jar=ALL-UNNAMED --add-opens=java.naming/javax.naming.spi=ALL-UNNAMED --add-opens=java.logging/java.util.logging=ALL-UNNAMED --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED --add-opens=java.base/sun.net.www.protocol.jrt=ALL-UNNAMED</argLine>
                        <forkCount>1</forkCount>
                        <reuseForks>true</reuseForks>
                        <classpathDependencyExcludes>
                            <classpathDependencyExcludes>
                                javax.servlet:servlet-api
                            </classpathDependencyExcludes>
                            <classpathDependencyExclude>
                                org.apache.felix:javax.servlet
                            </classpathDependencyExclude>
                        </classpathDependencyExcludes>
                        <!--<forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>-->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.6</version>
                    <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <excludes>*_.class</excludes>
                                <!--
                                    Sets the name of the property containing the settings
                                    for JaCoCo runtime agent.
                                -->
                                <propertyName>jacoco.surefireArgLine</propertyName>
                            </configuration>
                        </execution>
                        <!--
                            Ensures that the code coverage report for unit tests is created after
                            unit tests have been run.
                        -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jdepend-maven-plugin</artifactId>
                    <version>2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.14.0</version>
                    <configuration>
                        <printFailingErrors>true</printFailingErrors>
                        <failurePriority>${pmd.failurePriority}</failurePriority>
                        <rulesets>
                            <rulset>colab/pmd/default-ruleset.xml</rulset>
                        </rulesets>
                        <excludeRoots>
                            <excludeRoot>target/generated-sources/plugin</excludeRoot>
                        </excludeRoots>
                        <targetJdk>${jdk.version}</targetJdk>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>ch.colab-project.colab</groupId>
                            <artifactId>build-tools</artifactId>
                            <version>1.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-publish-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.1.2</version>
                    <configuration>
                        <configLocation>colab/checkstyle/colab_checks.xml</configLocation>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>ch.colab-project.colab</groupId>
                            <artifactId>build-tools</artifactId>
                            <version>1.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>3.0</version>
                    <dependencies>
                        <dependency>
                            <groupId>ch.colab-project.colab</groupId>
                            <artifactId>build-tools</artifactId>
                            <version>1.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <!-- Site  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
                <configuration>
                    <outputDirectory>${project.build.directory}/site</outputDirectory>
                    <skipDeploy>true</skipDeploy>
                    <generateReports>true</generateReports>
                </configuration>
            </plugin>
            <!-- -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>none</phase>
                        <goals>
                            <goal>publish-scm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <serverId>github</serverId>
                    <content>${project.build.directory}/staging</content>
                    <scmBranch>gh-pages</scmBranch>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <header>colab/licenseheader.template</header>
                    <properties>
                        <license.owner>AlbaSim, MEI, HEIG-VD, HES-SO</license.owner>
                        <license.years>2020-2021</license.years>
                    </properties>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/README</exclude>
                        <exclude>src/test/resources/**</exclude>
                        <exclude>src/main/resources/**</exclude>
                    </excludes>
                </configuration>
                <!--<executions>
                    <execution>
                        <id>first</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>-->
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>licenses</report>
                            <report>team</report>
                            <report>scm</report>
                            <report>issue-management</report>
                            <report>ci-management</report>
                            <report>dependencies</report>
                            <!--<report>mailing-list</report>
                            <report>summary</report>-->
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.9.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <doclint>all</doclint>
                    <failOnWarnings>true</failOnWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <!--<configuration>-->
                <!--<effort>Max</effort>-->
                <!--<threshold>Low</threshold>-->
                <!--<failOnError>true</failOnError>-->
                <!--<includeFilterFile>colab/spotbugs/security-include.xml</includeFilterFile>-->
                <!--<excludeFilterFile>colab/spotbugs/security-exclude.xml</excludeFilterFile>-->
                <!--<spotbugsXmlOutputFilename>spotbugsSecurityXml.xml</spotbugsXmlOutputFilename>-->
                <!--<plugins>-->
                <!--<plugin>-->
                <!--<groupId>com.h3xstream.findsecbugs</groupId>-->
                <!--<artifactId>findsecbugs-plugin</artifactId>-->
                <!--<version>1.9.0</version>-->
                <!--</plugin>-->
                <!--</plugins>-->
                <!--</configuration>-->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>colab/checkstyle/colab_checks.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <!-- Code complexity -->
            <!-- @fixme removed because it is not compatible w/ java 1.7 -->
            <!--<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javancss-maven-plugin</artifactId>
                <version>2.0-beta-2</version>
                <configuration>
                    <includes>
                        <include>*.java</include>
                    </includes>
                    <linkXRef>false</linkXRef>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>javancss</groupId>
                        <artifactId>javancss</artifactId>
                        <version>29.50</version>
                        <scope>compile</scope>
                    </dependency>
                </dependencies>
            </plugin>-->
        </plugins>
    </reporting>

    <repositories>
        <!-- Once Arq 1.7.0 or later is released with JUnit 5 support, this can be removed -->
        <repository>
            <id>payara</id>
            <url>https://nexus.payara.fish/repository/payara-artifacts</url>
        </repository>

        <!-- eclipselink patched version -->
        <repository>
            <id>payara-patched-externals</id>
            <name>Payara Patched Externals</name>
            <url>https://raw.github.com/payara/Payara_PatchedProjects/master</url>
            <!--<url>file:///opt/PayaraDev/Payara_PatchedProjects</url>-->
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
